<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cosa" xml:space="preserve">
    <value>Cosa</value>
  </data>
  <data name="msgTitle" xml:space="preserve">
    <value>Gesalt</value>
  </data>
  <data name="csNotFound" xml:space="preserve">
    <value>No se ha definido ninguna conexión para la base de datos.</value>
  </data>
  <data name="conError" xml:space="preserve">
    <value>Error en la conexión</value>
  </data>
  <data name="conOK" xml:space="preserve">
    <value>Conexión establecida con éxito</value>
  </data>
  <data name="firstTimeMsg" xml:space="preserve">
    <value>Es la primera vez que se inicia Gesalt. Es necesario que indique algunos datos.</value>
  </data>
  <data name="firstTimeTitle" xml:space="preserve">
    <value>Asistente de configuración</value>
  </data>
  <data name="noDBMsg" xml:space="preserve">
    <value>Debe especificar una localización para la base de datos</value>
  </data>
  <data name="dbErrorMsg" xml:space="preserve">
    <value>Se ha producido un error al intentar conectarse a la base de datos. Verifique la configuración de conexión.</value>
  </data>
  <data name="dbErrorTitle" xml:space="preserve">
    <value>Verifique los datos de la conexión</value>
  </data>
  <data name="fatalErrorDB" xml:space="preserve">
    <value>Se ha producido un error al conectarse con la base de datos. Se abrirá el asistente para que verifique si los datos de la conexión son los correctos.</value>
  </data>
  <data name="fatalErrorDBTitle" xml:space="preserve">
    <value>Error grave</value>
  </data>
  <data name="dbChange" xml:space="preserve">
    <value>Va a cambiar de base de datos. Los datos guardados en la anterior no se conservarán en la nueva. El programa se detendrá y, la próxima vez que lo ejecute, se abrirá con la nueva base de datos.</value>
  </data>
  <data name="dbChangeTitle" xml:space="preserve">
    <value>Cambio de base de datos</value>
  </data>
  <data name="dbSettingsChange" xml:space="preserve">
    <value>Va a cambiar los parámetros de conexión de la base de datos. El programa se detendrá y, la próxima vez que lo ejecute, se conectará a la base de datos con los nuevos parámetros.</value>
  </data>
  <data name="dbSettingsChangeTitle" xml:space="preserve">
    <value>Cambio en los parámetros de conexión de la base de datos</value>
  </data>
  <data name="fieldFirstName" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="fieldLastName" xml:space="preserve">
    <value>Apellidos</value>
  </data>
  <data name="fieldNif" xml:space="preserve">
    <value>NIF</value>
  </data>
  <data name="fieldAddress" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="fieldZip" xml:space="preserve">
    <value>Código postal</value>
  </data>
  <data name="fieldCity" xml:space="preserve">
    <value>Localidad</value>
  </data>
  <data name="fieldProvince" xml:space="preserve">
    <value>Provincia/País</value>
  </data>
  <data name="fieldPhone" xml:space="preserve">
    <value>Teléfono</value>
  </data>
  <data name="fieldEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="fieldPathLogo" xml:space="preserve">
    <value>Logotipo</value>
  </data>
  <data name="fieldType" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="editLessorTitle" xml:space="preserve">
    <value>Editar un arrendador - Gesalt</value>
  </data>
  <data name="rowRemovedMsg" xml:space="preserve">
    <value>se va a eliminar de la base de datos. ¿Está seguro?</value>
  </data>
  <data name="rowRemovedTitle" xml:space="preserve">
    <value>Borrar una fila</value>
  </data>
  <data name="opFailedMsg" xml:space="preserve">
    <value>La operación no pudo completarse.</value>
  </data>
  <data name="opFailedTitle" xml:space="preserve">
    <value>Operación fallida</value>
  </data>
  <data name="EqualTo" xml:space="preserve">
    <value>Igual a</value>
  </data>
  <data name="DifferentFrom" xml:space="preserve">
    <value>Distinto a</value>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>Empieza por</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Contiene</value>
  </data>
  <data name="InvalidFilterData" xml:space="preserve">
    <value>Datos del filtro no válidos.</value>
  </data>
  <data name="EnterCorrectData" xml:space="preserve">
    <value>Introduzca datos correctos.</value>
  </data>
  <data name="filterAnd" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="filterOr" xml:space="preserve">
    <value>O</value>
  </data>
  <data name="filterLessorLogoTrue" xml:space="preserve">
    <value>El arrendador tiene logotipo</value>
  </data>
  <data name="filterLessorLogoFalse" xml:space="preserve">
    <value>El arrendador no tiene logotipo</value>
  </data>
  <data name="filterLessorsMenuOFF" xml:space="preserve">
    <value>&amp;Filtrar datos</value>
  </data>
  <data name="filterLessorsMenuON" xml:space="preserve">
    <value>Borrar &amp;filtro</value>
  </data>
  <data name="filterLessorsLabelOFF" xml:space="preserve">
    <value>Arrendadores:</value>
  </data>
  <data name="filterLessorsLabelON" xml:space="preserve">
    <value>FILTRO</value>
  </data>
  <data name="addWhenFilterOnMsg" xml:space="preserve">
    <value>Hay un filtro activo. Si añade un registro, el filtro se eliminará. ¿Está seguro?</value>
  </data>
  <data name="ofdImageFilter" xml:space="preserve">
    <value>Ficheros JPG (*.jpg)|*.jpg|Todos los ficheros (*.*)|*.*</value>
  </data>
  <data name="rptLessorsHeaderTitle" xml:space="preserve">
    <value>Informe de arrendadores</value>
  </data>
  <data name="fieldRequired" xml:space="preserve">
    <value>Este campo es requerido</value>
  </data>
  <data name="fieldComments" xml:space="preserve">
    <value>Comentarios</value>
  </data>
  <data name="fieldRating" xml:space="preserve">
    <value>Valoración</value>
  </data>
  <data name="fieldAcceptAd" xml:space="preserve">
    <value>Acepta publicidad</value>
  </data>
  <data name="filterGuestAcceptAdTrue" xml:space="preserve">
    <value>El cliente acepta publicidad</value>
  </data>
  <data name="filterGuestAcceptAdFalse" xml:space="preserve">
    <value>El cliente no acepta publicidad</value>
  </data>
  <data name="editGuestTitle" xml:space="preserve">
    <value>Editar un cliente - Gesalt</value>
  </data>
  <data name="filterGuestsMenuON" xml:space="preserve">
    <value>Borrar &amp;filtro</value>
  </data>
  <data name="filterGuestsMenuOFF" xml:space="preserve">
    <value>&amp;Filtrar datos</value>
  </data>
  <data name="filterGuestsLabelON" xml:space="preserve">
    <value>FILTRO</value>
  </data>
  <data name="filterGuestsLabelOFF" xml:space="preserve">
    <value>Clientes:</value>
  </data>
  <data name="rptGuestsHeaderTitle" xml:space="preserve">
    <value>Informe de clientes</value>
  </data>
  <data name="fieldCadRef" xml:space="preserve">
    <value>Ref. catastral</value>
  </data>
  <data name="fieldBedrooms" xml:space="preserve">
    <value>Dormitorios</value>
  </data>
  <data name="fieldMaxGuests" xml:space="preserve">
    <value>Máx. plazas</value>
  </data>
  <data name="fieldBaths" xml:space="preserve">
    <value>Baños</value>
  </data>
  <data name="fieldSize" xml:space="preserve">
    <value>Superficie</value>
  </data>
  <data name="filterPropertiesLabelOFF" xml:space="preserve">
    <value>Inmuebles:</value>
  </data>
  <data name="filterPropertiesLabelON" xml:space="preserve">
    <value>FILTRO</value>
  </data>
  <data name="filterPropertiesMenuOFF" xml:space="preserve">
    <value>&amp;Filtrar datos</value>
  </data>
  <data name="filterPropertiesMenuON" xml:space="preserve">
    <value>Borrar &amp;filtro</value>
  </data>
  <data name="rptPropertiesHeaderTitle" xml:space="preserve">
    <value>Informe de inmuebles</value>
  </data>
  <data name="editPropTitle" xml:space="preserve">
    <value>Editar un inmueble - Gesalt</value>
  </data>
  <data name="rowRemovedPropMsg" xml:space="preserve">
    <value>El inmueble situado en </value>
  </data>
  <data name="fieldDescription" xml:space="preserve">
    <value>Descripción</value>
  </data>
</root>